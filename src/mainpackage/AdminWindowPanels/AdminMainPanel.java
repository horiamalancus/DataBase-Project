/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainpackage.AdminWindowPanels;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import mainpackage.ApplicationWindow;

/**
 *
 * @author cosmi
 */
public class AdminMainPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    private final ApplicationWindow appWindow;
    private final int CAESARCIPHERSHIFT = 25;

    public AdminMainPanel(ApplicationWindow appWindow) {

        this.appWindow = appWindow;
        initComponents();
        initActionListeners();
        
        JLabel jLabel1 = new JLabel("");
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", java.awt.Font.BOLD, 36));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout defaultPanelLayout = new javax.swing.GroupLayout(defaultPanel);
        defaultPanel.setLayout(defaultPanelLayout);
        defaultPanelLayout.setHorizontalGroup(
            defaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(defaultPanelLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(290, Short.MAX_VALUE))
        );
        defaultPanelLayout.setVerticalGroup(
            defaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(defaultPanelLayout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );
        
    }

    private void initActionListeners() {
        loginButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        backCAButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        createNewAccountButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        createAccountButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        menusAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        categoriesAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        productsAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        ingredientsAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        categoriesProductsAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());

        recipesAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        productTypeAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        ordersAdminButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        productsOrdersButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());
        productStocksButton.addActionListener(appWindow.getAppActionListener().getButtonClickListener());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        loginMainPanel = new javax.swing.JPanel();
        loginPanels = new javax.swing.JPanel();
        adminLoginPanel = new javax.swing.JPanel();
        idAdminTextField = new javax.swing.JTextField();
        numeContTextField = new javax.swing.JTextField();
        parolaContTextField = new javax.swing.JPasswordField();
        idAdminLabel = new javax.swing.JLabel();
        numeContLabel = new javax.swing.JLabel();
        parolaContLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        createNewAccountButton = new javax.swing.JButton();
        forgotPasswordButton = new javax.swing.JButton();
        createAccountPanel = new javax.swing.JPanel();
        numeContCALabel = new javax.swing.JLabel();
        parolaContCAtLabel = new javax.swing.JLabel();
        parolaContCAtLabel1 = new javax.swing.JLabel();
        numeContCATextField = new javax.swing.JTextField();
        parolaContCATextField = new javax.swing.JPasswordField();
        repParolaContCATextField1 = new javax.swing.JPasswordField();
        backCAButton = new javax.swing.JButton();
        createAccountButton = new javax.swing.JButton();
        adminMenuPanel = new javax.swing.JSplitPane();
        leftSideAdminPanel = new javax.swing.JPanel();
        menusAdminButton = new javax.swing.JButton();
        categoriesAdminButton = new javax.swing.JButton();
        productsAdminButton = new javax.swing.JButton();
        ingredientsAdminButton = new javax.swing.JButton();
        categoriesProductsAdminButton = new javax.swing.JButton();
        recipesAdminButton = new javax.swing.JButton();
        productTypeAdminButton = new javax.swing.JButton();
        ordersAdminButton = new javax.swing.JButton();
        productsOrdersButton = new javax.swing.JButton();
        productStocksButton = new javax.swing.JButton();
        delogareButton = new javax.swing.JButton();
        rightSideAdminPanel = new javax.swing.JPanel();
        defaultPanel = new javax.swing.JPanel();

        setLayout(new java.awt.CardLayout());

        loginMainPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        loginPanels.setBackground(new java.awt.Color(102, 0, 51));
        loginPanels.setLayout(new java.awt.CardLayout());

        adminLoginPanel.setBackground(new java.awt.Color(102, 51, 0));
        adminLoginPanel.setForeground(new java.awt.Color(102, 0, 51));

        idAdminTextField.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N

        numeContTextField.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N

        idAdminLabel.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        idAdminLabel.setForeground(new java.awt.Color(255, 255, 255));
        idAdminLabel.setText("ID ADMIN:");

        numeContLabel.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        numeContLabel.setForeground(new java.awt.Color(255, 255, 255));
        numeContLabel.setText("NUME CONT:");

        parolaContLabel.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        parolaContLabel.setForeground(new java.awt.Color(255, 255, 255));
        parolaContLabel.setText("PAROLA:");

        loginButton.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        loginButton.setText("Logare");
        loginButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        createNewAccountButton.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        createNewAccountButton.setText("Creare cont nou");
        createNewAccountButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        forgotPasswordButton.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        forgotPasswordButton.setText("Am uitat datele de logare");
        forgotPasswordButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        forgotPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotPasswordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminLoginPanelLayout = new javax.swing.GroupLayout(adminLoginPanel);
        adminLoginPanel.setLayout(adminLoginPanelLayout);
        adminLoginPanelLayout.setHorizontalGroup(
            adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminLoginPanelLayout.createSequentialGroup()
                .addContainerGap(174, Short.MAX_VALUE)
                .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(adminLoginPanelLayout.createSequentialGroup()
                        .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numeContLabel)
                            .addComponent(idAdminLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parolaContLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(idAdminTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(numeContTextField)
                            .addComponent(parolaContTextField)))
                    .addGroup(adminLoginPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createNewAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(forgotPasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                .addGap(224, 224, 224))
        );
        adminLoginPanelLayout.setVerticalGroup(
            adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminLoginPanelLayout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idAdminTextField)
                    .addComponent(idAdminLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numeContTextField)
                    .addComponent(numeContLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(adminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parolaContLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(adminLoginPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(parolaContTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createNewAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(forgotPasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );

        loginPanels.add(adminLoginPanel, "card1");

        createAccountPanel.setBackground(new java.awt.Color(102, 51, 0));
        createAccountPanel.setForeground(new java.awt.Color(102, 0, 51));

        numeContCALabel.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        numeContCALabel.setForeground(new java.awt.Color(255, 255, 255));
        numeContCALabel.setText("NUME CONT:");

        parolaContCAtLabel.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        parolaContCAtLabel.setForeground(new java.awt.Color(255, 255, 255));
        parolaContCAtLabel.setText("PAROLA:");

        parolaContCAtLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        parolaContCAtLabel1.setForeground(new java.awt.Color(255, 255, 255));
        parolaContCAtLabel1.setText("REPETA PAROLA:");

        numeContCATextField.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N

        backCAButton.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        backCAButton.setText("Înapoi");
        backCAButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        createAccountButton.setFont(new java.awt.Font("Segoe UI Historic", 0, 11)); // NOI18N
        createAccountButton.setText("Creare cont");
        createAccountButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createAccountPanelLayout = new javax.swing.GroupLayout(createAccountPanel);
        createAccountPanel.setLayout(createAccountPanelLayout);
        createAccountPanelLayout.setHorizontalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createAccountPanelLayout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(parolaContCAtLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numeContCALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(createAccountPanelLayout.createSequentialGroup()
                                .addComponent(parolaContCAtLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addGap(32, 32, 32)
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(numeContCATextField, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(parolaContCATextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(repParolaContCATextField1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(backCAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(154, 154, 154))
        );
        createAccountPanelLayout.setVerticalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createAccountPanelLayout.createSequentialGroup()
                .addContainerGap(185, Short.MAX_VALUE)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeContCATextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numeContCALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parolaContCAtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(parolaContCATextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parolaContCAtLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repParolaContCATextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backCAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );

        loginPanels.add(createAccountPanel, "card2");

        javax.swing.GroupLayout loginMainPanelLayout = new javax.swing.GroupLayout(loginMainPanel);
        loginMainPanel.setLayout(loginMainPanelLayout);
        loginMainPanelLayout.setHorizontalGroup(
            loginMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginMainPanelLayout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(loginPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(328, Short.MAX_VALUE))
        );
        loginMainPanelLayout.setVerticalGroup(
            loginMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );

        add(loginMainPanel, "card1");

        adminMenuPanel.setDividerLocation(210);
        adminMenuPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        leftSideAdminPanel.setBackground(new java.awt.Color(102, 51, 0));
        leftSideAdminPanel.setLayout(new java.awt.GridBagLayout());

        menusAdminButton.setText("Meniuri");
        menusAdminButton.setActionCommand("ButonMeniuAdmin");
        menusAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(menusAdminButton, gridBagConstraints);

        categoriesAdminButton.setText("Categorii");
        categoriesAdminButton.setActionCommand("ButonMeniuAdmin");
        categoriesAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        categoriesAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesAdminButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(categoriesAdminButton, gridBagConstraints);

        productsAdminButton.setText("Produse");
        productsAdminButton.setActionCommand("ButonMeniuAdmin");
        productsAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productsAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productsAdminButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(productsAdminButton, gridBagConstraints);

        ingredientsAdminButton.setText("Ingrediente");
        ingredientsAdminButton.setActionCommand("ButonMeniuAdmin");
        ingredientsAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ingredientsAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientsAdminButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(ingredientsAdminButton, gridBagConstraints);

        categoriesProductsAdminButton.setText("Categorii <-> Produse");
        categoriesProductsAdminButton.setActionCommand("ButonMeniuAdmin");
        categoriesProductsAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        categoriesProductsAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesProductsAdminButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(categoriesProductsAdminButton, gridBagConstraints);

        recipesAdminButton.setText("Retete");
        recipesAdminButton.setActionCommand("ButonMeniuAdmin");
        recipesAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(recipesAdminButton, gridBagConstraints);

        productTypeAdminButton.setText("Tipuri aliment");
        productTypeAdminButton.setActionCommand("ButonMeniuAdmin");
        productTypeAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productTypeAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productTypeAdminButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 46;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(productTypeAdminButton, gridBagConstraints);

        ordersAdminButton.setText("Comenzi");
        ordersAdminButton.setActionCommand("ButonMeniuAdmin");
        ordersAdminButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 49;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(ordersAdminButton, gridBagConstraints);

        productsOrdersButton.setText("Produse <-> Comenzi");
        productsOrdersButton.setActionCommand("ButonMeniuAdmin");
        productsOrdersButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productsOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productsOrdersButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 49;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(productsOrdersButton, gridBagConstraints);

        productStocksButton.setText("Stocuri produs");
        productStocksButton.setActionCommand("ButonMeniuAdmin");
        productStocksButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productStocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productStocksButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 49;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(productStocksButton, gridBagConstraints);

        delogareButton.setText("Delogare");
        delogareButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delogareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delogareButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 49;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftSideAdminPanel.add(delogareButton, gridBagConstraints);

        adminMenuPanel.setLeftComponent(leftSideAdminPanel);

        rightSideAdminPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout defaultPanelLayout = new javax.swing.GroupLayout(defaultPanel);
        defaultPanel.setLayout(defaultPanelLayout);
        defaultPanelLayout.setHorizontalGroup(
            defaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1085, Short.MAX_VALUE)
        );
        defaultPanelLayout.setVerticalGroup(
            defaultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 859, Short.MAX_VALUE)
        );

        rightSideAdminPanel.add(defaultPanel, "card2");

        adminMenuPanel.setRightComponent(rightSideAdminPanel);

        add(adminMenuPanel, "card2");
        menusAdminPanel = new MenusAdminPanel(this.appWindow);
        rightSideAdminPanel.add(menusAdminPanel, "Meniuri");

        categoriesAdminPanel = new CategoriesAdminPanel(this.appWindow);
        rightSideAdminPanel.add(categoriesAdminPanel, "Categorii");

        categoriesProductsAdminPanel = new CategoriesProductsAdminPanel(this.appWindow);
        rightSideAdminPanel.add(categoriesProductsAdminPanel, "Categorii <-> Produse");

        ingredientsAdminPanel = new IngredientsAdminPanel(this.appWindow);
        rightSideAdminPanel.add(ingredientsAdminPanel, "Ingrediente");

        ordersAdminPanel = new OrdersAdminPanel(this.appWindow);
        rightSideAdminPanel.add(ordersAdminPanel, "Comenzi");

        productStockPanel = new ProductStockPanel(this.appWindow);
        rightSideAdminPanel.add(productStockPanel, "Stocuri produs");

        productTypeAdminPanel = new ProductTypeAdminPanel(this.appWindow);
        rightSideAdminPanel.add(productTypeAdminPanel, "Tipuri aliment");

        productsAdminPanel = new ProductsAdminPanel(this.appWindow);
        rightSideAdminPanel.add(productsAdminPanel, "Produse");

        productsOrdersAdminPanel = new ProductsOrdersAdminPanel(this.appWindow);
        rightSideAdminPanel.add(productsOrdersAdminPanel, "Produse <-> Comenzi");

        recipesAdminPanel = new RecipesAdminPanel(this.appWindow);
        rightSideAdminPanel.add(recipesAdminPanel, "Retete");
    }// </editor-fold>//GEN-END:initComponents

    private void categoriesAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesAdminButtonActionPerformed
        categoriesAdminPanel.fillComboBoxes();
    }//GEN-LAST:event_categoriesAdminButtonActionPerformed

    private void categoriesProductsAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesProductsAdminButtonActionPerformed
        categoriesProductsAdminPanel.fillComboBoxes();
    }//GEN-LAST:event_categoriesProductsAdminButtonActionPerformed

    private void productsAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productsAdminButtonActionPerformed
        // productsAdminPanel.fillComboBoxes();
    }//GEN-LAST:event_productsAdminButtonActionPerformed

    private void ingredientsAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientsAdminButtonActionPerformed
        //ingredientsAdminPanel.fillComboBoxes();
    }//GEN-LAST:event_ingredientsAdminButtonActionPerformed

    private void productTypeAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productTypeAdminButtonActionPerformed

    }//GEN-LAST:event_productTypeAdminButtonActionPerformed

    private void productStocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productStocksButtonActionPerformed

    }//GEN-LAST:event_productStocksButtonActionPerformed

    private void delogareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delogareButtonActionPerformed

        CardLayout cardLayout;
        cardLayout = (CardLayout) appWindow.getAdminWindow().adminMainPanel.getLayout();
        cardLayout.show(appWindow.getAdminWindow().adminMainPanel, "card1");
    }//GEN-LAST:event_delogareButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

    }//GEN-LAST:event_loginButtonActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        // TODO add your handling code here:
        createAccountButton.setActionCommand("Creare cont");
    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void forgotPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgotPasswordButtonActionPerformed
        String result = JOptionPane.showInputDialog(this, "Introduceti ID-ul dvs.:");
        if (result == null) {
            return;
        }

        try {
            PreparedStatement ps = appWindow.getDataBaseConnection().getConnection().prepareStatement("SELECT nume_prenume_cont, parola_cont FROM Administratori WHERE id_admin = ?");
            ps.setShort(1, Short.parseShort(result));

            ResultSet rs = ps.executeQuery();
            rs.next();
            String nume = rs.getString(1);
            String parola = rs.getString(2);

            try {
                JOptionPane.showMessageDialog(this, "Numele contului dvs. este: " + nume + "\n" + "Parola dvs. este: " + caesarCipher(parola, -CAESARCIPHERSHIFT));
            } catch (Exception ex) {
                Logger.getLogger(AdminMainPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Cont inexistent.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Cont inexistent.");
        }

    }//GEN-LAST:event_forgotPasswordButtonActionPerformed

    private void productsOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productsOrdersButtonActionPerformed
        productsOrdersAdminPanel.fillComboBoxes();
    }//GEN-LAST:event_productsOrdersButtonActionPerformed

    public int personalCheckFunction(int check) {
        try {
            // TODO add your handling code here:
            Connection conn = appWindow.getDataBaseConnection().getConnection();
            Statement st = conn.createStatement();
            String temp1 = idAdminTextField.getText();
            String temp2 = numeContTextField.getText();
            String temp3 = parolaContTextField.getText();
            ResultSet rs = st.executeQuery("SELECT COUNT(*) FROM Administratori WHERE id_admin = '" + temp1 + "' AND nume_prenume_cont= '" + temp2 + "' AND parola_cont='" + caesarCipher(temp3, CAESARCIPHERSHIFT) + "'");
            while (rs.next()) {
                String checkString = rs.getString(1);
                if (checkString.equals("1")) {
                    check = 1;
                    
                    JLabel JL = (JLabel)defaultPanel.getComponent(0);
                    JL.setText("Bine ați venit, "+numeContTextField.getText()+"!");
                    
                    idAdminTextField.setText("");
                    numeContTextField.setText("");
                    parolaContTextField.setText("");

                    numeContCATextField.setText("");
                    parolaContCATextField.setText("");
                    repParolaContCATextField1.setText("");

                    CardLayout cardLayout = (CardLayout) appWindow.getAdminWindow().adminMainPanel.rightSideAdminPanel.getLayout();
                    cardLayout.show(appWindow.getAdminWindow().adminMainPanel.rightSideAdminPanel, "card2"); // CARD-UL DEFAULT

                } else {
                    check = 0;
                    JOptionPane.showMessageDialog(this, "Unul din campurile introduse este incorect");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminMainPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        return check;
    }

    public void newAccount() {
        try {
            // TODO add your handling code here:
            Connection conn = appWindow.getDataBaseConnection().getConnection();
            String temp1 = numeContCATextField.getText();
            String temp2 = parolaContCATextField.getText();
            String temp3 = repParolaContCATextField1.getText();
            PreparedStatement st = conn.prepareStatement("INSERT INTO Administratori(nume_prenume_cont, parola_cont) VALUES(? , ?)");
            st.setString(1, temp1);
            st.setString(2, caesarCipher(temp2, CAESARCIPHERSHIFT));
            if (temp2.equals(temp3)) {
                ResultSet rs2 = st.executeQuery();
                System.out.println("Cont creat cu succes");
                ResultSet rs = conn.createStatement().executeQuery("SELECT MAX(id_admin) FROM Administratori");
                rs.next();
                JOptionPane.showMessageDialog(this, "Id-ul dumneavoastra este:" + rs.getString(1));
            } else {
                JOptionPane.showMessageDialog(this, "Reintroducere parola incorecta");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Nume sau parola incorecta.\nFormatul numelui trebuie sa fie [Nume][Prenume]-[Optional Altprenume], toate incepand cu majuscule.\nParola nu trebuie sa contina caractere albe.");
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            return;
        }

        idAdminTextField.setText("");
        numeContTextField.setText("");
        parolaContTextField.setText("");

        numeContCATextField.setText("");
        parolaContCATextField.setText("");
        repParolaContCATextField1.setText("");
    }

    public static String caesarCipher(String text, int shift) throws Exception {
        StringBuffer result = new StringBuffer();

        for (int i = 0; i < text.length(); i++) {

            if (text.charAt(i) < 33 || text.charAt(i) > 126) {
                throw new Exception("Parola nu trebuie sa contina caractere albe.");
            }

            char ch = (char) (((int) text.charAt(i) + shift - 33) % 94 + 33);
            result.append(ch);
        }

        return result.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel adminLoginPanel;
    private javax.swing.JSplitPane adminMenuPanel;
    private javax.swing.JButton backCAButton;
    private javax.swing.JButton categoriesAdminButton;
    private javax.swing.JButton categoriesProductsAdminButton;
    private javax.swing.JButton createAccountButton;
    private javax.swing.JPanel createAccountPanel;
    private javax.swing.JButton createNewAccountButton;
    private javax.swing.JPanel defaultPanel;
    private javax.swing.JButton delogareButton;
    private javax.swing.JButton forgotPasswordButton;
    private javax.swing.JLabel idAdminLabel;
    private javax.swing.JTextField idAdminTextField;
    private javax.swing.JButton ingredientsAdminButton;
    private javax.swing.JPanel leftSideAdminPanel;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginMainPanel;
    public javax.swing.JPanel loginPanels;
    private javax.swing.JButton menusAdminButton;
    private javax.swing.JLabel numeContCALabel;
    private javax.swing.JTextField numeContCATextField;
    private javax.swing.JLabel numeContLabel;
    private javax.swing.JTextField numeContTextField;
    private javax.swing.JButton ordersAdminButton;
    private javax.swing.JPasswordField parolaContCATextField;
    private javax.swing.JLabel parolaContCAtLabel;
    private javax.swing.JLabel parolaContCAtLabel1;
    private javax.swing.JLabel parolaContLabel;
    private javax.swing.JPasswordField parolaContTextField;
    private javax.swing.JButton productStocksButton;
    private javax.swing.JButton productTypeAdminButton;
    private javax.swing.JButton productsAdminButton;
    private javax.swing.JButton productsOrdersButton;
    private javax.swing.JButton recipesAdminButton;
    private javax.swing.JPasswordField repParolaContCATextField1;
    public javax.swing.JPanel rightSideAdminPanel;
    // End of variables declaration//GEN-END:variables

    public MenusAdminPanel menusAdminPanel;
    public CategoriesAdminPanel categoriesAdminPanel;
    public CategoriesProductsAdminPanel categoriesProductsAdminPanel;
    public IngredientsAdminPanel ingredientsAdminPanel;
    public OrdersAdminPanel ordersAdminPanel;
    public ProductStockPanel productStockPanel;
    public ProductTypeAdminPanel productTypeAdminPanel;
    public ProductsAdminPanel productsAdminPanel;
    public ProductsOrdersAdminPanel productsOrdersAdminPanel;
    public RecipesAdminPanel recipesAdminPanel;
}
