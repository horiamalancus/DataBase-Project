-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2021-01-10 17:06:07 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE administratori (
    id_admin           NUMBER(2) NOT NULL,
    nume_prenume_cont  VARCHAR2(30) NOT NULL,
    parola_cont        VARCHAR2(30) NOT NULL
)
LOGGING;

ALTER TABLE administratori
    ADD CONSTRAINT nume_prenume_cont_ck CHECK ( REGEXP_LIKE ( nume_prenume_cont,
                                                              '^([A-Z][a-z]+)\ ([A-Z][a-z]+)(\-[A-Z][a-z]+)?$' ) );

ALTER TABLE administratori
    ADD CONSTRAINT parola_cont_ck CHECK ( REGEXP_LIKE ( parola_cont,
                                                        '^\S+$' ) );

ALTER TABLE administratori ADD CONSTRAINT administratori_pk PRIMARY KEY ( id_admin );

CREATE TABLE categorii (
    nr_categorie                    NUMBER(2) NOT NULL,
    nume_categorie                  VARCHAR2(30) NOT NULL,
    meniuri_nr_meniu                NUMBER(2) NOT NULL,
    data_crearii                    DATE DEFAULT sysdate,
    detalii_suplimentare_categorie  CLOB
)
LOGGING;

ALTER TABLE categorii
    ADD CONSTRAINT nume_categorie_ck CHECK ( REGEXP_LIKE ( nume_categorie,
                                                           '^[A-Z][a-z]+([\ \-][a-z]+)*$' ) );

ALTER TABLE categorii ADD CONSTRAINT categorii_pk PRIMARY KEY ( nr_categorie );

ALTER TABLE categorii ADD CONSTRAINT categorii_nr_meniu_nume_cat_un UNIQUE ( meniuri_nr_meniu,
                                                                             nume_categorie );

CREATE TABLE categorii_produse (
    categorii_nr_categorie  NUMBER(2) NOT NULL,
    produse_nr_produs       NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE categorii_produse ADD CONSTRAINT categorii_produse_pk PRIMARY KEY ( categorii_nr_categorie,
                                                                                produse_nr_produs );

CREATE TABLE comenzi (
    id_comanda                    NUMBER(9) NOT NULL,
    data_comanda                  DATE DEFAULT sysdate NOT NULL,
    nr_masa                       NUMBER(2),
    detalii_suplimentare_comanda  CLOB
)
LOGGING;

ALTER TABLE comenzi ADD CONSTRAINT nr_masa_ck CHECK ( nr_masa > 0 );

ALTER TABLE comenzi ADD CONSTRAINT comenzi_pk PRIMARY KEY ( id_comanda );

CREATE TABLE ingrediente (
    id_ingredient          NUMBER(4) NOT NULL,
    nume_ingredient        VARCHAR2(20) NOT NULL,
    stoc_ingredient        NUMBER(5, 2) NOT NULL,
    producator             VARCHAR2(30),
    tipuri_aliment_id_tip  NUMBER(2)
)
LOGGING;

ALTER TABLE ingrediente
    ADD CONSTRAINT nume_ingredient_ck CHECK ( REGEXP_LIKE ( nume_ingredient,
                                                            '^[a-z]+(\ [a-z]+)*$' ) );

ALTER TABLE ingrediente ADD CONSTRAINT stoc_ingredient_ck CHECK ( stoc_ingredient >= 0 );

ALTER TABLE ingrediente ADD CONSTRAINT ingrediente_pk PRIMARY KEY ( id_ingredient );

ALTER TABLE ingrediente ADD CONSTRAINT ingrediente_nume_ingr_prod_un UNIQUE ( nume_ingredient,
                                                                              producator );

CREATE TABLE meniuri (
    nr_meniu                    NUMBER(2) NOT NULL,
    nume_meniu                  VARCHAR2(30) NOT NULL,
    data_crearii                DATE DEFAULT sysdate NOT NULL,
    detalii_suplimentare_meniu  CLOB
)
LOGGING;

ALTER TABLE meniuri
    ADD CONSTRAINT nume_meniu_ck CHECK ( REGEXP_LIKE ( nume_meniu,
                                                       '^[A-Z][a-z]+([\ \-]([A-Z]?[a-z]+|[1-9][0-9]*))*$' ) );

ALTER TABLE meniuri ADD CONSTRAINT meniuri_pk PRIMARY KEY ( nr_meniu );

ALTER TABLE meniuri ADD CONSTRAINT meniuri_nume_meniu_un UNIQUE ( nume_meniu );

CREATE TABLE produse (
    nr_produs                    NUMBER(4) NOT NULL,
    nume_produs                  VARCHAR2(65) NOT NULL,
    tip_produs                   VARCHAR2(10) NOT NULL,
    pret                         NUMBER(5, 2) NOT NULL,
    stare                        VARCHAR2(7) DEFAULT 'ACTIV' NOT NULL,
    data_crearii                 DATE DEFAULT sysdate,
    detalii_suplimentare_produs  CLOB,
    tipuri_aliment_id_tip        NUMBER(2)
)
LOGGING;

ALTER TABLE produse
    ADD CONSTRAINT nume_produs_ck CHECK ( REGEXP_LIKE ( nume_produs,
                                                        '^[A-Z][a-z]+([\ \-]([A-Z]?[a-z]+|[0-9]+(\.[0-9]*[1-9])?))*$' ) );

ALTER TABLE produse
    ADD CHECK ( tip_produs IN ( 'bautura', 'preparat' ) );

ALTER TABLE produse ADD CONSTRAINT pret_ck CHECK ( pret > 0 );

ALTER TABLE produse
    ADD CONSTRAINT stare_ck CHECK ( stare IN ( 'ACTIV', 'INACTIV' ) );

ALTER TABLE produse ADD CONSTRAINT produse_pk PRIMARY KEY ( nr_produs );

ALTER TABLE produse ADD CONSTRAINT produse_nr_produs_un UNIQUE ( nume_produs );

CREATE TABLE produse_comenzi (
    nr_produse_comandate  NUMBER(3) NOT NULL,
    produse_nr_produs     NUMBER(4) NOT NULL,
    comenzi_id_comanda    NUMBER(9) NOT NULL
)
LOGGING;

ALTER TABLE produse_comenzi ADD CONSTRAINT nr_produse_comandate_ck CHECK ( nr_produse_comandate > 0 );

ALTER TABLE produse_comenzi ADD CONSTRAINT produse_comenzi_pk PRIMARY KEY ( produse_nr_produs,
                                                                            comenzi_id_comanda );

CREATE TABLE retete (
    produse_nr_produs          NUMBER(4) NOT NULL,
    ingrediente_id_ingredient  NUMBER(4) NOT NULL,
    cantitate_ingredient       NUMBER(4, 2) NOT NULL
)
LOGGING;

ALTER TABLE retete ADD CONSTRAINT cantitate_ingredient_ck CHECK ( cantitate_ingredient > 0 );

ALTER TABLE retete ADD CONSTRAINT retete_pk PRIMARY KEY ( produse_nr_produs,
                                                          ingrediente_id_ingredient );

CREATE TABLE stocuri_produs (
    stoc_produs        NUMBER(3) NOT NULL,
    produse_nr_produs  NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE stocuri_produs ADD CONSTRAINT stoc_produs_ck CHECK ( stoc_produs >= 0 );

ALTER TABLE stocuri_produs ADD CONSTRAINT stocuri_produs_pk PRIMARY KEY ( produse_nr_produs );

CREATE TABLE tipuri_aliment (
    id_tip    NUMBER(2) NOT NULL,
    nume_tip  VARCHAR2(20) NOT NULL
)
LOGGING;

ALTER TABLE tipuri_aliment
    ADD CONSTRAINT nume_tip_ck CHECK ( REGEXP_LIKE ( nume_tip,
                                                     '^[a-z]+\-?[a-z]+$' ) );

ALTER TABLE tipuri_aliment ADD CONSTRAINT tipuri_aliment_pk PRIMARY KEY ( id_tip );

ALTER TABLE tipuri_aliment ADD CONSTRAINT tipuri_aliment_nume_tip_un UNIQUE ( nume_tip );

ALTER TABLE categorii
    ADD CONSTRAINT categorii_meniuri_fk FOREIGN KEY ( meniuri_nr_meniu )
        REFERENCES meniuri ( nr_meniu )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE categorii_produse
    ADD CONSTRAINT categorii_produse_categorii_fk FOREIGN KEY ( categorii_nr_categorie )
        REFERENCES categorii ( nr_categorie )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE categorii_produse
    ADD CONSTRAINT categorii_produse_produse_fk FOREIGN KEY ( produse_nr_produs )
        REFERENCES produse ( nr_produs )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE ingrediente
    ADD CONSTRAINT ingrediente_tipuri_aliment_fk FOREIGN KEY ( tipuri_aliment_id_tip )
        REFERENCES tipuri_aliment ( id_tip )
            ON DELETE SET NULL
    NOT DEFERRABLE;

ALTER TABLE produse_comenzi
    ADD CONSTRAINT produse_comenzi_comenzi_fk FOREIGN KEY ( comenzi_id_comanda )
        REFERENCES comenzi ( id_comanda )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE produse_comenzi
    ADD CONSTRAINT produse_comenzi_produse_fk FOREIGN KEY ( produse_nr_produs )
        REFERENCES produse ( nr_produs )
    NOT DEFERRABLE;

ALTER TABLE produse
    ADD CONSTRAINT produse_tipuri_aliment_fk FOREIGN KEY ( tipuri_aliment_id_tip )
        REFERENCES tipuri_aliment ( id_tip )
            ON DELETE SET NULL
    NOT DEFERRABLE;

ALTER TABLE retete
    ADD CONSTRAINT retete_ingrediente_fk FOREIGN KEY ( ingrediente_id_ingredient )
        REFERENCES ingrediente ( id_ingredient )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE retete
    ADD CONSTRAINT retete_produse_fk FOREIGN KEY ( produse_nr_produs )
        REFERENCES produse ( nr_produs )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE stocuri_produs
    ADD CONSTRAINT stocuri_produs_produse_fk FOREIGN KEY ( produse_nr_produs )
        REFERENCES produse ( nr_produs )
            ON DELETE CASCADE
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_data_comanda_comenzi 
    BEFORE INSERT ON Comenzi 
    FOR EACH ROW 
BEGIN
	IF ( :new.data_comanda < SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_comanda, 'DD.MM.YYYY HH24:MI:SS' ) || 'trebuie sa fie egala sau mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_data_crearii_categorii 
    BEFORE INSERT ON Categorii 
    FOR EACH ROW 
BEGIN
	IF ( :new.data_crearii < SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_crearii, 'DD.MM.YYYY HH24:MI:SS' ) || 'trebuie sa fie egala sau mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_data_crearii_meniuri 
    BEFORE INSERT ON Meniuri 
    FOR EACH ROW 
BEGIN
	IF ( :new.data_crearii < SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_crearii, 'DD.MM.YYYY HH24:MI:SS' ) || 'trebuie sa fie egala sau mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_data_crearii_produse 
    BEFORE INSERT ON Produse 
    FOR EACH ROW 
BEGIN
	IF ( :new.data_crearii < SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_crearii, 'DD.MM.YYYY HH24:MI:SS' ) || 'trebuie sa fie egala sau mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE SEQUENCE administratori_id_admin_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER administratori_id_admin_trg BEFORE
    INSERT ON administratori
    FOR EACH ROW
    WHEN ( new.id_admin IS NULL )
BEGIN
    :new.id_admin := administratori_id_admin_seq.nextval;
END;
/

CREATE SEQUENCE categorii_nr_categorie_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categorii_nr_categorie_trg BEFORE
    INSERT ON categorii
    FOR EACH ROW
    WHEN ( new.nr_categorie IS NULL )
BEGIN
    :new.nr_categorie := categorii_nr_categorie_seq.nextval;
END;
/

CREATE SEQUENCE comenzi_id_comanda_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER comenzi_id_comanda_trg BEFORE
    INSERT ON comenzi
    FOR EACH ROW
    WHEN ( new.id_comanda IS NULL )
BEGIN
    :new.id_comanda := comenzi_id_comanda_seq.nextval;
END;
/

CREATE SEQUENCE ingrediente_id_ingredient_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ingrediente_id_ingredient_trg BEFORE
    INSERT ON ingrediente
    FOR EACH ROW
    WHEN ( new.id_ingredient IS NULL )
BEGIN
    :new.id_ingredient := ingrediente_id_ingredient_seq.nextval;
END;
/

CREATE SEQUENCE meniuri_nr_meniu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER meniuri_nr_meniu_trg BEFORE
    INSERT ON meniuri
    FOR EACH ROW
    WHEN ( new.nr_meniu IS NULL )
BEGIN
    :new.nr_meniu := meniuri_nr_meniu_seq.nextval;
END;
/

CREATE SEQUENCE produse_nr_produs_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER produse_nr_produs_trg BEFORE
    INSERT ON produse
    FOR EACH ROW
    WHEN ( new.nr_produs IS NULL )
BEGIN
    :new.nr_produs := produse_nr_produs_seq.nextval;
END;
/

CREATE SEQUENCE tipuri_aliment_id_tip_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tipuri_aliment_id_tip_trg BEFORE
    INSERT ON tipuri_aliment
    FOR EACH ROW
    WHEN ( new.id_tip IS NULL )
BEGIN
    :new.id_tip := tipuri_aliment_id_tip_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             41
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          11
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          7
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
